//package main
//
//import (
//	`fmt`
//	`net/http`
//	`time`
//)
//
////
////import (
////	"crypto/rand"
////	"log"
////
////	"github.com/ThalesIgnite/crypto11"
////)
////
////func randomBytes() []byte {
////	result := make([]byte, 32)
////	rand.Read(result)
////	return result
////}
////
////const rsaSize = 2048
////
////func main() {
////	ctx, err := crypto11.Configure(&crypto11.Config{
////		Path:              "/opt/nfast/toolkits/pkcs11/libcknfast.so",
////		TokenSerial:       "6D30-03E0-D947",
////		LoginNotSupported: true,
////	})
////	if err != nil {
////		log.Fatal(err)
////	}
////
////	id := randomBytes()
////	_, err = ctx.GenerateRSAKeyPair(id, rsaSize)
////	if err != nil {
////		log.Fatal(err)
////	}
////	log.Println("RSA key pair was successfully generated")
////}
//
//
//var client = http.Client{
//	Timeout: 2 * time.Second,
//}
//
//func Ping(domain string) (int, error) {
//	url := "http://" + domain
//	req, err := http.NewRequest("HEAD", url, nil)
//	if err != nil {
//		return 0, err
//	}
//	resp, err := client.Do(req)
//	if err != nil {
//		return 0, err
//	}
//	//fmt.Println(resp)
//	resp.Body.Close()
//
//	return resp.StatusCode, nil
//}
//
//func main() {
//	fmt.Println(Ping("www.google.com"))
//}